{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","item","getUserById","usersFromServer","find","userId","App","useState","userName","setUserName","setTitle","visibleTodos","setTodos","isErrorTitle","setErrorTitle","isErrorUserName","setErrorUserName","newTodoId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","currentTodo","htmlFor","type","value","placeholder","onChange","filteredInput","target","replace","test","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f4c4098.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((item) => (\n      <TodoInfo todo={item} key={item.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { ChangeEvent, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUserById(id: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [userName, setUserName] = useState(0);\n  const [title, setTitle] = useState('');\n  const [visibleTodos, setTodos] = useState(todos);\n  const [isErrorTitle, setErrorTitle] = useState(false);\n  const [isErrorUserName, setErrorUserName] = useState(false);\n\n  const handleChangeUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserName(Number(event.target.value));\n    setErrorUserName(false);\n  };\n\n  const handleTitle = ((event: ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value;\n    const filteredInput = input.replace(/[^A-Za-zA-Яa-я0-9\\s]/g, '');\n\n    setTitle(/^\\s*$/.test(filteredInput)\n      ? ''\n      : filteredInput);\n    setErrorTitle(false);\n  });\n\n  const resetForm = () => {\n    setUserName(0);\n    setTitle('');\n  };\n\n  const newTodoId = Math.max(...visibleTodos.map(todo => todo.id));\n\n  const handleFormSubmit = (event: ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setErrorTitle(!title);\n    setErrorUserName(!userName);\n\n    const newTodo: Todo = {\n      id: newTodoId + 1,\n      title,\n      completed: false,\n      userId: userName,\n      user: getUserById(userName),\n    };\n\n    if (title && userName) {\n      setTodos(currentTodo => [\n        ...currentTodo,\n        newTodo,\n      ]);\n\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"todoTitle\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            id=\"#todoTitle\"\n            onChange={handleTitle}\n          />\n\n          {isErrorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"#userSelect\"\n            value={userName}\n            onChange={handleChangeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {isErrorUserName\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}